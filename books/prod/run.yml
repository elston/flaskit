version: '3'


volumes:
  var_lib_postgresql_data:
  router_letsencrypt:
  router_letsencrypt_data:
  backer_uploads:


networks:
  netmain:
    driver: bridge


services:

  router:
    image: nginx:${NGINX_TAG}
    expose:
      - "80"    
      - "443"          
    ports:
      - "80:80"
      - "443:443"        
    networks:
      - netmain    
    depends_on:
      - backer      
    volumes:
      - router_letsencrypt:/etc/letsencrypt
      - router_letsencrypt_data:/router/letsencrypt
      - ../../images/router/ssl.conf:/etc/nginx/conf.d/default.conf
      - ../../images/fronter/src/build:/fronter/build      
    
  storage:
    image: ${PROJECT}_storage
    expose:
      - "5432"
    ports:
      - "5432:5432"
    networks:
      - netmain
    volumes:
      - var_lib_postgresql_data:/var/lib/postgresql/data
    # .............................................
    # restart: always


  backer:
    image: ${PROJECT}_backer
    networks:
      - netmain   
    depends_on:
      - storage
    environment:
      - PROJECT=backer      
      - PYTHONPATH=/backer      
      - WORKON_HOME=/backer/.env         
      # ...
      - FLASK_CONFIGURATION=production
      # ...
      - DB_SECRET_KEY=${backer_SECRET_KEY}
      - DB_NAME=${backer_DB_NAME}
      - DB_USER=${backer_DB_USER}
      - DB_PASSWORD=${backer_DB_PASSWORD}
      - DB_URL=storage       
      # ..
      - FLASK_APP=app.py
      # - FLASK_DEBUG=1
    volumes:
      - backer_uploads:/uploads      
      - ../../images/backer/src:/backer
      - ../../images/fronter/src/build:/fronter/build      
      - ../../images/backer/rungunicorn.sh:/usr/local/bin/rungunicorn.sh
    # .............................................        
    command: /usr/local/bin/rungunicorn.sh    


   