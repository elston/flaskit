underscores_in_headers on;


# ========== backer =================
server {
    listen                      80 default_server;
    server_name                 flaskit.ru www.flaskit.ru;
    
    # ...
    return 301 https://$host$request_uri;
    # return 301 https://$server_name$request_uri;    
    # location / {
    #     rewrite ^ https://$server_name$request_uri permanent;
    # }


    # ...
    location ^~ /.well-known {
        allow all;
        root  /router/letsencrypt/;
    }

}


server {
    listen      443           ssl http2;
    listen [::]:443           ssl http2;
    server_name               flaskit.ru www.flaskit.ru;
    ssl                       on;

    add_header                Strict-Transport-Security "max-age=31536000" always;

    ssl_session_cache         shared:SSL:20m;
    ssl_session_timeout       10m;

    ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers               "ECDH+AESGCM:ECDH+AES256:ECDH+AES128:!ADH:!AECDH:!MD5;";

    ssl_stapling              on;
    ssl_stapling_verify       on;
    # resolver                  8.8.8.8 8.8.4.4;

    ssl_certificate           /etc/letsencrypt/live/flaskit.ru/fullchain.pem;
    ssl_certificate_key       /etc/letsencrypt/live/flaskit.ru/privkey.pem;
    ssl_trusted_certificate   /etc/letsencrypt/live/flaskit.ru/chain.pem;

    # ..
    client_max_body_size 4G;
    charset utf-8;  
    # ...
    location / {
        # ...
        proxy_pass http://backer:8000;
        proxy_redirect off;   
        proxy_pass_header X-CSRFToken;             
        # ...
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        proxy_set_header   Host             $host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-NginX-Proxy    true;
    }

    # ...
    location /build/ {
        alias   /fronter/build/;
    }

    location ^~ /.well-known {
        allow all;
        root  /router/letsencrypt/;
    }    
}

